#!/bin/bash
STORE=wifi_adapters.conf
WIRELESSCONFIG=wireless.conf
function setvar(){
    varname=$1
    value=$2
    eval $varname=${!value}
}
function checkContainer(){
    PID=$(lxc-info "${CONTAINERWRT}" openwrt | grep PID: | awk '{print $2;}')
    if [ -z "${PID}" ] ; then
        echo "Container ${CONTAINERWRT} not found or not running."
        exit 1
    fi
    if [ ! -f "/run/netns/${CONTAINERWRT}" ] ; then 
        mkdir -p /run/netns
        ln -s /proc/"${PID}"/ns/net /run/netns/"${CONTAINERWRT}" 
    fi
}
function addAdapters(){
    checkContainer
    rm -f ${STORE}
    rm -f ${WIRELESSCONFIG}
    export counter=0
    for adapter in ${WIFI_IFACES}; do
        echo ADDING "${adapter}"
        DEVINFO=$(udevadm info /sys/class/net/"${adapter}")
        local WIFI_DEV
        WIFI_DEV=$(cat /sys/class/net/"${adapter}"/phy80211/name)
        export WIFI_DEV
        iw phy "${WIFI_DEV}" set netns "${PID}"
        echo "$adapter"-phy="${WIFI_DEV}" >> ${STORE}

        ISUSB=$(echo "${DEVINFO}" | grep 'ID_BUS=usb')
        if [ -z "$ISUSB" ] ; then
            echo "${adapter}" is not a USB device
        else
            while read -r line; do
                if [[ ${line} == *=* ]]; then
                    keyval=$(echo "${line}" | cut -d' ' -f2)
                    key=$(echo "${keyval}" | cut -d'=' -f1)
                    value=$(echo "${keyval}" | cut -d'=' -f2)

                    if [ ${key} == ID_MODEL_ID ] ; then
                            MODEL_ID=${value}
                    elif [ ${key} == ID_VENDOR_ID ] ; then
                            VENDOR_ID=${value}
                    fi
                fi
            done <<< "$DEVINFO"
            echo "$adapter" is USB device "$VENDOR_ID":"$MODEL_ID"
            echo "$adapter-usbid=$VENDOR_ID $MODEL_ID" >> ${STORE}
        fi
        export WIFI_CHANNEL WIFI_BAND WIFI_SSID WIFI_PASSWORD COUNTRY
        setvar WIFI_CHANNEL WIFI_CHANNEL_"${adapter}"
        setvar WIFI_BAND WIFI_BAND_"${adapter}"
        setvar WIFI_SSID WIFI_SSID_"${adapter}"
        setvar WIFI_PASSWORD WIFI_PASSWORD_"${adapter}"
       
        counter=$((counter + 1))
        export WIFI_RADIO=${counter}
        envsubst < "${CONFIGDIR}"/openwrt/wireless.tpl >> ${WIRELESSCONFIG}       
    done
    cp ${WIRELESSCONFIG} "${CONTAINERROOTFS}"/etc/config/wireless
}
function attemptRename(){
    adapter=$1
    PHY_ID=$(grep "${adapter}-phy" ${STORE} | cut -d'=' -f2)
    INFO=$(ip l show ${PHY_ID}-ap0 2>/dev/null)
    if [ -z "${INFO}" ] ; then
        echo "No such interface ${PHY_ID}-ap0, skipping rename."
    else
        echo rename ${PHY_ID}-ap0 to ${adapter}
        ip link set ${PHY_ID}-ap0 name ${adapter}
    fi
}
function removeAdapters(){
    for adapter in ${WIFI_IFACES}; do
        echo RETURNING "${adapter}"
        ISUSB=$(grep "${adapter}-usbid" ${STORE})
        attemptRename "${adapter}"
        INFO=$(ip l show "${adapter}" 2>/dev/null)
        if [ ! -z "${INFO}" ] ; then
            echo "Rename to ${adapter} was successful."
        else
            if [ ! -z "$ISUSB" ] ; then
                echo "Attempting to reset USB device ${adapter}."
                read -r VENDOR_ID MODEL_ID < <(grep "${adapter}-usbid" ${STORE} | cut -d'=' -f2)
                if [ -z "${VENDOR_ID}" ] || [ -z "${MODEL_ID}" ] ; then
                    echo "No USB ID found for ${adapter}, skipping usbreset."
                else
                    echo "Resetting USB device ${VENDOR_ID}:${MODEL_ID}"
                    usbreset "$VENDOR_ID":"$MODEL_ID"
                fi
            fi
        fi
    done
    rm -rf /run/netns/"${CONTAINERWRT}"
}
#source vars
CMD=$1

if [[ $CMD == add ]] ; then
    addAdapters
elif [[ $CMD = remove ]] ; then
    removeAdapters
else
    echo "Usage: $0 {add|remove}"
    exit 1
fi